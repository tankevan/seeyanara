{"version":3,"sources":["components/Card/components/MilestoneCard/MilestoneCard.js","components/Card/components/NoteCard/NoteCard.js","components/Card/components/StatsCard/StatsCard.js","components/Card/Card.js","components/Grid/Grid.js","App.js","theme.js","index.js"],"names":["MilestoneCard","milestone_action","milestone_date","w","centerContent","p","pb","color","fontSize","fontWeight","size","NoteCard","message","from","py","px","StatsCard","emoji","statistic","statistic_description","Card","renderCardType","type","props","boxShadow","className","borderWidth","borderColor","borderRadius","Grid","useEffect","renderGrid","MiniGrid","container","item","gutter","mount","window","addEventListener","cardData","content","cards","renderCards","_","map","cardProps","App","maxW","as","m","page_title","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"omIAGe,SAASA,EAAT,GAA8D,IAArCC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,eACxD,OACE,eAAC,IAAD,CAAWC,EAAE,OAAOC,eAAa,EAACC,EAAE,KAApC,UACE,cAAC,IAAD,CAAKC,GAAG,IAAR,SACE,cAAC,IAAD,CAAMC,MAAM,WAAWC,SAAS,KAAKC,WAAW,OAAhD,SAAwDR,MAE1D,cAAC,IAAD,UACE,cAAC,IAAD,CAASS,KAAK,MAAd,SAAqBR,SCRd,SAASS,EAAT,GAAsC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAC1C,OACE,qCACE,cAAC,IAAD,CAAKR,EAAE,IAAP,SACGO,IAEH,cAAC,IAAD,CAAKE,GAAG,IAAIC,GAAG,IAAf,SACE,cAAC,IAAD,CAAMN,WAAW,WAAWF,MAAM,WAAlC,SAA8CM,SCPvC,SAASG,EAAT,GAAiE,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,sBACpD,OACE,eAAC,IAAD,CAAWhB,EAAE,OAAOC,eAAa,EAACC,EAAE,KAApC,UACE,cAAC,IAAD,CAAKC,GAAG,IAAR,SACE,cAAC,IAAD,CAASI,KAAK,MAAd,SAAqBO,MAEvB,cAAC,IAAD,CAAKX,GAAG,IAAR,SACE,cAAC,IAAD,CAASI,KAAK,MAAd,SAAqBQ,MAEvB,cAAC,IAAD,UACE,cAAC,IAAD,CAAMX,MAAM,WAAWE,WAAW,WAAlC,SAA8CU,SCLvC,SAASC,EAAT,GAAkC,IAC3CC,EADyBC,EAAiB,EAAjBA,KAASC,EAAQ,wBAE9C,OAAOD,GACL,IAAK,YACHD,EAAkB,cAACrB,EAAD,eAAmBuB,IACrC,MACF,IAAK,OACHF,EAAkB,cAACV,EAAD,eAAcY,IAChC,MACF,IAAK,QACHF,EAAkB,cAACL,EAAD,eAAeO,IACjC,MACF,QAEEF,EAAiB,KAGrB,OACE,mCACE,cAAC,IAAD,CAAKG,UAAU,KAAKC,UAAU,OAAOtB,EAAE,KAAKuB,YAAY,MAAMC,YAAY,QAAQC,aAAa,KAA/F,SACGP,M,YChBM,SAASQ,EAAKN,GAC3BO,qBAAU,WACR,IAAMC,EAAa,WACJ,IAAIC,IAAS,CACxBC,UAAW,QACXC,KAAM,QACNC,OAAQ,KAELC,SAGPL,IAGAM,OAAOC,iBAAiB,SAAUP,KACjC,IAEH,IAAMQ,EAAWC,EAAQC,MAEnBC,EAAcC,IAAEC,IAAIL,GAAU,SAACM,GAAD,OAAe,cAACzB,EAAD,eAAUyB,OAE7D,OACE,cAAC,IAAD,CAAKpB,UAAU,OAAOtB,EAAE,OAAxB,SACGuC,ICbQI,MAXf,WACE,OACE,eAAC,IAAD,CAAWC,KAAK,OAAO3C,eAAa,EAApC,UACE,cAAC,IAAD,CAAS4C,GAAG,KAAKtC,KAAK,MAAMuC,EAAE,KAA9B,SACGT,EAAQU,aAEX,cAACrB,EAAD,Q,wBCNSsB,EADDC,YAAY,CAAEC,OALb,CACbC,iBAAkB,OAClBC,oBAAoB,KCMtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WAEA,cAAC,IAAD,CAAiBJ,iBAAkBH,EAAME,OAAOC,mBAC9C,cAAC,EAAD,SAGJK,SAASC,eAAe,W","file":"static/js/main.f221d790.chunk.js","sourcesContent":["import _ from 'lodash'\nimport { Box, Container, Heading, Text } from '@chakra-ui/react'\n\nexport default function MilestoneCard({ milestone_action, milestone_date }) {\n  return (\n    <Container w=\"full\" centerContent p=\"12\">\n      <Box pb=\"2\">\n        <Text color=\"gray.300\" fontSize=\"lg\" fontWeight=\"bold\">{milestone_action}</Text>\n      </Box>\n      <Box>\n        <Heading size=\"3xl\">{milestone_date}</Heading>\n      </Box>\n    </Container>\n  )\n}","import { Box, Divider, Text  } from '@chakra-ui/react'\n\nexport default function NoteCard({ message, from }) {\n  return (\n    <>\n      <Box p=\"6\">\n        {message}\n      </Box>\n      <Box py=\"6\" px=\"6\">\n        <Text fontWeight=\"semibold\" color=\"gray.400\">{from}</Text>\n        \n      </Box>\n    </>\n  )\n}","import { Box, Container, Heading, Text } from '@chakra-ui/react'\n\nexport default function StatsCard({ emoji, statistic, statistic_description }) {\n  return (\n    <Container w=\"full\" centerContent p=\"12\">\n      <Box pb=\"8\">\n        <Heading size=\"2xl\">{emoji}</Heading>\n      </Box>\n      <Box pb=\"1\">\n        <Heading size=\"4xl\">{statistic}</Heading>\n      </Box>\n      <Box>\n        <Text color=\"gray.300\" fontWeight=\"semibold\">{statistic_description}</Text>\n      </Box>\n    </Container>\n  )\n}","import { Box } from '@chakra-ui/react'\n\n// Components\nimport MilestoneCard from './components/MilestoneCard'\nimport NoteCard from './components/NoteCard'\nimport StatsCard from './components/StatsCard'\n\nexport default function Card({ type, ...props}) {\n  let renderCardType\n  switch(type) {\n    case 'milestone':\n      renderCardType = (<MilestoneCard {...props} />)\n      break\n    case 'note':\n      renderCardType = (<NoteCard {...props} />)\n      break\n    case 'stats':\n      renderCardType = (<StatsCard {...props} />)\n      break\n    default:\n      // skip card if no 'type' defined\n      renderCardType = null\n      break\n  }\n  return (\n    <>\n      <Box boxShadow=\"sm\" className=\"card\" w=\"sm\" borderWidth=\"1px\" borderColor=\"black\" borderRadius=\"xl\">\n        {renderCardType}\n      </Box>\n    </>\n  )\n}","import _ from \"lodash\";\nimport { useEffect } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport MiniGrid from \"minigrid\";\n\n// Components\nimport Card from \"../Card\";\n\n// Data\nimport content from \"../../content\";\n\nexport default function Grid(props) {\n  useEffect(() => {\n    const renderGrid = () => {\n      const grid = new MiniGrid({\n        container: \".grid\",\n        item: \".card\",\n        gutter: 20,\n      });\n      grid.mount();\n    };\n\n    renderGrid();\n\n    // Minigrid doesn't automatically re-render on resize\n    window.addEventListener(\"resize\", renderGrid);\n  }, []);\n\n  const cardData = content.cards;\n\n  const renderCards = _.map(cardData, (cardProps) => <Card {...cardProps} />);\n\n  return (\n    <Box className=\"grid\" w=\"100%\">\n      {renderCards}\n    </Box>\n  );\n}\n","import { Container, Heading } from \"@chakra-ui/react\";\n\nimport \"./App.scss\";\n\n// Components\nimport Grid from \"./components/Grid\";\n\n// Data\nimport content from \"./content\";\n\nfunction App() {\n  return (\n    <Container maxW=\"full\" centerContent>\n      <Heading as=\"h1\" size=\"2xl\" m=\"12\">\n        {content.page_title}\n      </Heading>\n      <Grid />\n    </Container>\n  );\n}\n\nexport default App;\n","// theme.js\n// 1. import `extendTheme` function\nimport { extendTheme } from \"@chakra-ui/react\"\n// 2. Add your color mode config\nconst config = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false,\n}\n// 3. extend the theme\nconst theme = extendTheme({ config })\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import  gradientBg from './img/gradientbg.png';\n\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nimport { ColorModeScript } from \"@chakra-ui/react\"\nimport theme from \"./theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n       {/* ðŸ‘‡ Here's the script */}\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App/>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}