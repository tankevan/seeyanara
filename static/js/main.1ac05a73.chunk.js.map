{"version":3,"sources":["components/Card/components/MilestoneCard/MilestoneCard.js","components/Card/components/NoteCard/NoteCard.js","components/Card/components/StatsCard/StatsCard.js","components/Card/Card.js","components/Grid/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["MilestoneCard","milestone_action","milestone_date","w","centerContent","p","pb","color","fontSize","fontWeight","size","NoteCard","message","from","StatsCard","emoji","statistic","statistic_description","Card","renderCardType","type","props","className","borderWidth","borderColor","borderRadius","Grid","useEffect","renderGrid","MiniGrid","container","item","gutter","mount","window","addEventListener","cardData","content","cards","renderCards","_","map","cardProps","maxW","App","m","page_title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ukIAGe,SAASA,EAAT,GAA8D,IAArCC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,eACxD,OACE,eAAC,IAAD,CAAWC,EAAE,OAAOC,eAAa,EAACC,EAAE,KAApC,UACE,cAAC,IAAD,CAAKC,GAAG,IAAR,SACE,cAAC,IAAD,CAAMC,MAAM,WAAWC,SAAS,KAAKC,WAAW,OAAhD,SAAwDR,MAE1D,cAAC,IAAD,UACE,cAAC,IAAD,CAASS,KAAK,MAAd,SAAqBR,S,YCRd,SAASS,EAAT,GAAsC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAC1C,OACE,qCACE,cAAC,IAAD,CAAKR,EAAE,IAAP,SACGO,IAEH,cAAC,IAAD,IACA,cAAC,IAAD,CAAKP,EAAE,IAAP,SACGQ,OCRM,SAASC,EAAT,GAAiE,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,sBACpD,OACE,eAAC,IAAD,CAAWd,EAAE,OAAOC,eAAa,EAACC,EAAE,KAApC,UACE,cAAC,IAAD,CAAKC,GAAG,IAAR,SACE,cAAC,IAAD,CAASI,KAAK,MAAd,SAAqBK,MAEvB,cAAC,IAAD,CAAKT,GAAG,IAAR,SACE,cAAC,IAAD,CAASI,KAAK,MAAd,SAAqBM,MAEvB,cAAC,IAAD,UACE,cAAC,IAAD,CAAMT,MAAM,WAAWE,WAAW,WAAlC,SAA8CQ,SCLvC,SAASC,EAAT,GAAkC,IAC3CC,EADyBC,EAAiB,EAAjBA,KAASC,EAAQ,wBAE9C,OAAOD,GACL,IAAK,YACHD,EAAkB,cAACnB,EAAD,eAAmBqB,IACrC,MACF,IAAK,OACHF,EAAkB,cAACR,EAAD,eAAcU,IAChC,MACF,IAAK,QACHF,EAAkB,cAACL,EAAD,eAAeO,IACjC,MACF,QAEEF,EAAiB,KAGrB,OACE,mCACE,cAAC,IAAD,CAAKG,UAAU,OAAOnB,EAAE,KAAKoB,YAAY,MAAMC,YAAY,QAAQC,aAAa,KAAhF,SACGN,M,YChBM,SAASO,EAAKL,GAC3BM,qBAAU,WACR,IAAMC,EAAa,WACJ,IAAIC,IAAS,CACxBC,UAAW,QACXC,KAAM,QACNC,OAAQ,IAELC,SAGPL,IAGAM,OAAOC,iBAAiB,SAAUP,KACjC,IAEH,IAAMQ,EAAWC,EAAQC,MAEnBC,EAAcC,IAAEC,IAAIL,GAAU,SAACM,GAAD,OAAe,cAACxB,EAAD,eAAUwB,OAE7D,OACE,cAAC,IAAD,CAAWpB,UAAU,OAAOqB,KAAK,OAAjC,SACIJ,ICjBOK,MATf,WACE,OACE,eAAC,IAAD,CAAWxC,eAAa,EAACuC,KAAK,OAA9B,UACE,cAAC,IAAD,CAASE,EAAE,KAAX,SAAiBR,EAAQS,aACzB,cAACpB,EAAD,QCASqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1ac05a73.chunk.js","sourcesContent":["import _ from 'lodash'\nimport { Box, Container, Heading, Text } from '@chakra-ui/react'\n\nexport default function MilestoneCard({ milestone_action, milestone_date }) {\n  return (\n    <Container w=\"full\" centerContent p=\"12\">\n      <Box pb=\"2\">\n        <Text color=\"gray.500\" fontSize=\"lg\" fontWeight=\"bold\">{milestone_action}</Text>\n      </Box>\n      <Box>\n        <Heading size=\"3xl\">{milestone_date}</Heading>\n      </Box>\n    </Container>\n  )\n}","import { Box, Divider } from '@chakra-ui/react'\n\nexport default function NoteCard({ message, from }) {\n  return (\n    <>\n      <Box p=\"6\">\n        {message}\n      </Box>\n      <Divider />\n      <Box p=\"6\">\n        {from}\n      </Box>\n    </>\n  )\n}","import { Box, Container, Heading, Text } from '@chakra-ui/react'\n\nexport default function StatsCard({ emoji, statistic, statistic_description }) {\n  return (\n    <Container w=\"full\" centerContent p=\"12\">\n      <Box pb=\"8\">\n        <Heading size=\"2xl\">{emoji}</Heading>\n      </Box>\n      <Box pb=\"1\">\n        <Heading size=\"4xl\">{statistic}</Heading>\n      </Box>\n      <Box>\n        <Text color=\"gray.500\" fontWeight=\"semibold\">{statistic_description}</Text>\n      </Box>\n    </Container>\n  )\n}","import { Box } from '@chakra-ui/react'\n\n// Components\nimport MilestoneCard from './components/MilestoneCard'\nimport NoteCard from './components/NoteCard'\nimport StatsCard from './components/StatsCard'\n\nexport default function Card({ type, ...props}) {\n  let renderCardType\n  switch(type) {\n    case 'milestone':\n      renderCardType = (<MilestoneCard {...props} />)\n      break\n    case 'note':\n      renderCardType = (<NoteCard {...props} />)\n      break\n    case 'stats':\n      renderCardType = (<StatsCard {...props} />)\n      break\n    default:\n      // skip card if no 'type' defined\n      renderCardType = null\n      break\n  }\n  return (\n    <>\n      <Box className=\"card\" w=\"sm\" borderWidth=\"1px\" borderColor=\"black\" borderRadius=\"lg\">\n        {renderCardType}\n      </Box>\n    </>\n  )\n}","import _ from 'lodash'\nimport { useEffect } from 'react'\nimport { Container } from '@chakra-ui/react'\nimport MiniGrid from 'minigrid'\n\n// Components\nimport Card from '../Card'\n\n// Data\nimport content from '../../content'\n\nexport default function Grid(props) {\n  useEffect(() => {\n    const renderGrid = () => {\n      const grid = new MiniGrid({\n        container: '.grid',\n        item: '.card',\n        gutter: 6,\n      })\n      grid.mount()\n    }\n\n    renderGrid()\n\n    // Minigrid doesn't automatically re-render on resize\n    window.addEventListener('resize', renderGrid)\n  }, [])\n\n  const cardData = content.cards\n\n  const renderCards = _.map(cardData, (cardProps) => <Card {...cardProps} />)\n\n  return (\n    <Container className=\"grid\" maxW=\"full\">\n      { renderCards }\n    </Container>\n  )\n}","import { Container, Heading } from '@chakra-ui/react'\n\n// Components\nimport Grid from './components/Grid'\n\n// Data\nimport content from './content'\n\nfunction App() {\n  return (\n    <Container centerContent maxW=\"full\">\n      <Heading m=\"12\">{content.page_title}</Heading>\n      <Grid />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}